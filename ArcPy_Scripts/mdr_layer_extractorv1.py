# -*- coding: utf-8 -*-
"""MDR_layer_extractorV1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1I_YHVjE7qsRCGje5eAvG13gUEqtCPGmR

#Introduction
**MDR_layer_extractorV1** is used to

---
The following program can be ran with these libraries
>* **arcpy** - Allows to run all train and test scripts in an interactive environment
* **os** - Allows the creation and removal of directory folders, gathering data, changing and finding current directory. Also, used for user and operation system to interact
"""

# Libraries used
import arcpy
import os

arcpy.env.overwriteOutput = True

"""User is asked to input file input and output information

An example would be:
>*Enter the input directory:* **E:\share\Copernicus_NDVI\M0204242\NDVI300_201601010000_GLOBE_PROBAV_V1.0.1**
>
>*Enter the output directory:* **E:\share\Copernicus_NDVI\M0204242\NDVI300_201601010000_GLOBE_PROBAV_V1.0.1**
>
>*Enter the layer name to be extraced:* **NDVI**
>
>*Enter the file extension:* **.nc**
"""

#Set the input directory
input_dir = input("Enter the input directory: ")
#Set the output directory
output_dir = input("Enter the output directory: ")
#Set the layer name
layer_name = input("Enter the layer name to be extracted: ")
#File extension
ext = input("Enter the file extenstion: ")

# Create a list of .hdf files in the input directory
hdf_files = []
for file in os.listdir(input_dir):
  if file.endswith(ext):
    hdf_files.append(os.path.join(input_dir,file))

"""Using the HDF files list, subset operations can be used for the list. The the output file is made by joining the output directory and the base name of the HDF file, the file extension is then replaced with ".tif". Each subset is then printed with the final statement being "Process complete"."""

# Iterate through the list of .hdf files and perform the subset
for hdf_file in hdf_files:
  # Set the output file name
  output_file = os.path.join(output_dir,os.path.basename(hdf_file))
  output_file = os.path.splitext(output_file)[0] + ".tif"
  print(hdf_file)
  # Perform the subset
  arcpy.SubsetMultidimensionalRaster_md(hdf_file,output_file,layer_name)
print("Process complete")